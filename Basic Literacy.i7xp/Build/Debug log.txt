Debugging log of Inform 7
Inform called as: C:\Program Files (x86)\Inform 7\Compilers\ni -internal C:\Program Files (x86)\Inform 7\Internal -project C:\Users\andre\Documents\git\basic-literacy\Basic Literacy.i7xp -format=ulx
Found language bundle 'English' (built in)
Found language bundle 'French' (built in)
Found language bundle 'German' (built in)
Found language bundle 'Italian' (built in)
Found language bundle 'Spanish' (built in)
Found language bundle 'Swedish' (built in)
Reading language definition from <C:\Program Files (x86)\Inform 7\Internal\Languages\English\Syntax.preform>
720 declarations read (14183 words)


-----------------------------------------------------
Phase I ... Lexical analysis
-----------------------------------------------------

I've now read your source text, which is 305 words long.


-----------------------------------------------------
Phase II ... Semantic analysis Ia
-----------------------------------------------------

I've also read Standard Rules by Graham Nelson, which is 42655 words long.
I've also read English Language by Graham Nelson, which is 2297 words long.


-----------------------------------------------------
Phase III ... Initialise language semantics
-----------------------------------------------------



-----------------------------------------------------
Phase IV ... Semantic analysis Ib
-----------------------------------------------------



-----------------------------------------------------
Phase V ... Semantic analysis II
-----------------------------------------------------



-----------------------------------------------------
Phase VI ... Semantic analysis III
-----------------------------------------------------



-----------------------------------------------------
Phase VII ... First pass through assertions
-----------------------------------------------------

    Problem PM_ChalkCheese issued from inform7/Chapter 15/Make Assertions.w, line 1530

      >--> The sentence 'The whiteboard is writable scenery in the OLAB' (source
        text, line 4) appears to say two things are the same - I am reading
        'whiteboard' and 'writable scenery in the OLAB' as two different things,
        and therefore it makes no sense to say that one is the other: it would be
        like saying that 'Antony is Cleopatra'. It would be all right if the second
        thing were the name of a kind, perhaps with properties: for instance
        'Alexandria is a lighted room' says that something called Alexandria exists
        and that it is a 'room', which is a kind I know about, combined with a
        property called 'lighted' which I also know about.

    Problem PM_ObjectIsValue issued from inform7/Chapter 15/Make Assertions.w, line 1449

      >--> I am reading the sentence 'The read text is "SCRIBBLE ON ME"' (source
        text, line 4) as saying that a thing called 'read text' is a value, but
        this makes no sense to me - it would be like saying 'the chair is 10'.

    Problem PM_KindOfActualValue issued from inform7/Chapter 15/Refine Parse Tree.w, line 314

      >--> You wrote 'A marker is a kind of writing tool' (source text, line 9):
        but I don't recognise that as a kind, such as 'room' or 'door': it would
        need to be straightforwardly the name of a kind, and not be qualified with
        adjectives like 'open'.

    Problem PM_KindRelated issued from inform7/Chapter 15/Make Assertions.w, line 1025
    (Assertion error: looking for alternative verbs in <a marker cap is part of every marker>.)

      >--> You wrote 'A marker cap is part of every marker' (source text, line 9):
        but something described only by its kind should not be given a specific
        place or role in the world, to avoid ambiguity. For instance, suppose 'car'
        is a kind. Then we are not allowed to say 'a car is in the garage': there's
        too much risk of confusion between whether an individual (but nameless) car
        is referred to, or whether cars are generically to be found there.
        Sentences of this form are therefore prohibited, though more specific ones
        like 'a car called Genevieve is in the garage' are fine, as is the reverse,
        'In the garage is a car.'

    Proposition is: [ is('the metal tray', {<schema: SupporterOf(*1)>:'marker'}) ]
    Problem PM_SubjectNotFree issued from inform7/Chapter 15/Make Assertions.w, line 1366

      >--> You wrote 'The black marker is a marker on the metal tray' (source text, line 11),
        but the black marker seems to be set equal to something in a complicated
        relationship with something else again, which is too much for me. Perhaps
        you're trying to do two things at once, and it would be clearer to write it
        as two sentences?

    Problem PM_ChalkCheese issued from inform7/Chapter 15/Make Assertions.w, line 1530

      >--> The sentence 'An eraser is an erasing tool on the metal tray' (source
        text, line 15) appears to say two things are the same - I am reading
        'eraser' and 'erasing tool on the metal tray' as two different things, and
        therefore it makes no sense to say that one is the other: it would be like
        saying that 'Antony is Cleopatra'. It would be all right if the second
        thing were the name of a kind, perhaps with properties: for instance
        'Alexandria is a lighted room' says that something called Alexandria exists
        and that it is a 'room', which is a kind I know about, combined with a
        property called 'lighted' which I also know about.



-----------------------------------------------------
Phase VIII ... Compilation now complete
-----------------------------------------------------

Total of 4 files written as streams.
CPU time: 86 centiseconds


That concludes the debugging log from this run of Inform.
Its contents were as follows, and can be changed by placing
text like 'Include property creations in the debugging log.'
or 'Omit everything from the debugging log.' in the source.

Included:
  debugging log contents  debugging log inclusions
Omitted:
  action creations   action pattern compilation  action pattern parsing  assemblies    assertions    case insensitive filehandling
  conditions    constructed past participles  constructed plurals   description compilation   excerpt meanings   excerpt parsing 
  expressions    extensions census   figure creations   grammar    grammar construction   headings  
  implications    inferences    kind changes   kind checking   kind creations   lexical output 
  local variables   matching    meaning list allocation  memory allocation   noun resolution   object compilation 
  object creations   object tree   phrase comparisons   phrase compilation   phrase creations   phrase registration 
  phrase usage   predicate calculus   predicate calculus workings  pronouns    property creations   property provision 
  property translations   relation definitions   rule attachments   rulebook compilation   spatial map   spatial map workings
  specification permissions   specification usage   specificities    table construction   template reading   text substitutions 
  time periods   variable creations   verifications    vocabulary  
